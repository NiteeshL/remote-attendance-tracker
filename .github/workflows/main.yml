name: CI/CD Pipelinename: CI/CD Pipeline
















































        kubectl rollout status deployment/attendance-tracker        kubectl set image deployment/attendance-tracker attendance-tracker=${{ env.DOCKER_REGISTRY }}/attendance-tracker:latest      run: |    - name: Update Kubernetes deployment        aws-region: ${{ env.AWS_REGION }}        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}      with:      uses: aws-actions/configure-aws-credentials@v1    - name: Configure AWS credentials        tags: ${{ env.DOCKER_REGISTRY }}/attendance-tracker:latest        push: true        context: .      with:      uses: docker/build-push-action@v2    - name: Build and push Docker image        password: ${{ secrets.DOCKER_PASSWORD }}        username: ${{ secrets.DOCKER_USERNAME }}      with:      uses: docker/login-action@v1    - name: Login to DockerHub      uses: docker/setup-buildx-action@v1    - name: Set up Docker Buildx      uses: actions/checkout@v2    - name: Checkout code    steps:    runs-on: ubuntu-latest  build:jobs:  DOCKER_REGISTRY: niteesh0303  EKS_CLUSTER_NAME: attendance-tracker  AWS_REGION: ap-south-1env:    branches: [ main ]  pull_request:    branches: [ main ]  push:on:
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-south-1
  EKS_CLUSTER_NAME: remote-attendance-tracker
  DOCKER_REGISTRY: niteesh0303

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/attendance-tracker-frontend:${{ github.sha }}

      - name: Build and push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/attendance-tracker-backend:${{ github.sha }}

      - name: Set image tags
        run: |
          echo "FRONTEND_IMAGE=${{ env.DOCKER_REGISTRY }}/attendance-tracker-frontend:${{ github.sha }}" >> $GITHUB_ENV
          echo "BACKEND_IMAGE=${{ env.DOCKER_REGISTRY }}/attendance-tracker-backend:${{ github.sha }}" >> $GITHUB_ENV

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check EKS cluster existence
        id: check-cluster
        continue-on-error: true
        run: |
          aws eks describe-cluster --name ${{ env.EKS_CLUSTER_NAME }}

      - name: Create EKS Cluster if not exists
        if: steps.check-cluster.outcome == 'failure'
        run: |
          aws eks create-cluster \
            --name ${{ env.EKS_CLUSTER_NAME }} \
            --region ${{ env.AWS_REGION }} \
            --role-arn ${{ secrets.EKS_ROLE_ARN }} \
            --resources-vpc-config subnetIds=${{ secrets.SUBNET_IDS }},securityGroupIds=${{ secrets.SECURITY_GROUP_IDS }}
          aws eks wait cluster-active --name ${{ env.EKS_CLUSTER_NAME }}

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS
        run: |
          sed -i "s|niteesh0303/attendance-tracker-frontend:latest|${{ env.DOCKER_REGISTRY }}/attendance-tracker-frontend:${{ github.sha }}|g" k8s/frontend-deployment.yaml
          sed -i "s|niteesh0303/attendance-tracker-backend:latest|${{ env.DOCKER_REGISTRY }}/attendance-tracker-backend:${{ github.sha }}|g" k8s/backend-deployment.yaml
          kubectl apply -f k8s/storage-class.yaml
          kubectl apply -f k8s/secrets.yaml
          kubectl apply -f k8s/mongodb-deployment.yaml
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/ingress.yaml
